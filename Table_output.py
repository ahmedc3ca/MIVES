# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\33621\Documents\Romain\Cours_EPFL\Semestre_3\How_people_learn_2\Code\Graphic_output.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import *
from PyQt5.QtWidgets import *
import matplotlib.pyplot as plt
import numpy as np



class Ui_Dialog_for_table(object):

    def setupUi_for_table(self, Dialog,pilar_dictionnary,criteria_dictionnary,indicator_dictionnary,final_value):
        self.final_value = final_value
        self.pilar_dictionnary = pilar_dictionnary
        self.criteria_dictionnary = criteria_dictionnary
        self.indicator_dictionnary = indicator_dictionnary

        tableWidgetInd = QTableWidget()
        tableWidgetInd.setRowCount(len(indicator_dictionnary))
        tableWidgetInd.setColumnCount(2) # I think we should add a column for the input value, but we can discuss it

        horHeaders = ["Indicator","Value"] # should we also diplay the weight of the indicator?
        tableWidgetInd.setHorizontalHeaderLabels(horHeaders)

        i = 0
        for ind in indicator_dictionnary:
            tableWidgetInd.setItem(i,0,QTableWidgetItem(str(ind)))
            tableWidgetInd.setItem(i,1,QTableWidgetItem(str(indicator_dictionnary[ind])))
            i = i+1

        tableWidgetCrit = QTableWidget()
        tableWidgetCrit.setRowCount(len(criteria_dictionnary))
        tableWidgetCrit.setColumnCount(2)
        i = 0
        for crit in criteria_dictionnary:
            tableWidgetCrit.setItem(i,0,QTableWidgetItem(str(crit)))
            tableWidgetCrit.setItem(i,1,QTableWidgetItem(str(criteria_dictionnary[crit])))
            i = i+1

        tableWidgetPil = QTableWidget()
        tableWidgetPil.setRowCount(len(pilar_dictionnary))
        tableWidgetPil.setColumnCount(2)
        i = 0
        for pil in pilar_dictionnary:
            tableWidgetPil.setItem(i,0,QTableWidgetItem(str(pil)))
            tableWidgetPil.setItem(i,1,QTableWidgetItem(str(pilar_dictionnary[pil])))
            i = i+1

        Dialog.setObjectName("Dialog")
        Dialog.resize(945, 806)
        self.tableView = QtWidgets.QTableView(Dialog)
        self.tableView.setGeometry(QtCore.QRect(30, 30, 891, 721))
        self.tableView.setObjectName("tableView")
        self.label = QtWidgets.QLabel(Dialog)
        self.label.setGeometry(QtCore.QRect(30, 0, 731, 21))
        self.label_text ="Indicators table"
        self.label.setObjectName(self.label_text)
        tableWidgetInd.show()

    
    def plot_figure(self,image):
        plt.clf()
        if self.number_of_times_clicked>=1: # We need to clear the graph
            pass
        self.grview = QtWidgets.QGraphicsView(self.graphicsView)
        scene = QtWidgets.QGraphicsScene(self.graphicsView)
        image = QPixmap(image)

        # Set it at the scale of the image to fit the window
        width = self.graphicsView.width()
        height = self.graphicsView.height()
        resized_image = image.scaled(width,height,QtCore.Qt.KeepAspectRatio) # To scale automaticall
        resized_image_1 = image.scaledToWidth(width) # To scale to the witdth of the window
        resized_image_2 = image.scaledToHeight(height) #To scale to the height of the window

        scene.addPixmap(resized_image)
        self.grview.setScene(scene)
        self.grview.show()


    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.label.setText(_translate("Dialog",self.label_text))
        self.pushButton.setText(_translate("Dialog", "PushButton"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog_for_table()

    pilar_dictionnary = {'Cost': 0.61, 
                  'Time': 0.39, 
                  'Economic': 0.36,
                  'Emissions': 0.55, 
                  'Energy': 0.19, 
                  'Materials': 0.26, 
                  'Environmental': 0.39, 
                  'Safety': 0.6, 
                  '3rd Party affect': 0.4, 
                  'Social': 0.25}
    criteria_dictionnary = {'Cost': 0.61, 
                  'Time': 0.39, 
                  'Economic': 0.36,
                  'Emissions': 0.55, 
                  'Energy': 0.19, 
                  'Materials': 0.26, 
                  'Environmental': 0.39, 
                  'Safety': 0.6, 
                  '3rd Party affect': 0.4, 
                  'Social': 0.25}
    indicator_dictionnary = {'Cost': 0.61, 
                  'Time': 0.39, 
                  'Economic': 0.36,
                  'Emissions': 0.55, 
                  'Energy': 0.19, 
                  'Materials': 0.26, 
                  'Environmental': 0.39, 
                  'Safety': 0.6, 
                  '3rd Party affect': 0.4, 
                  'Social': 0.25}
    final_value = 1

    ui.setupUi_for_table(Dialog,pilar_dictionnary,criteria_dictionnary,indicator_dictionnary,final_value)
    Dialog.show()
    sys.exit(app.exec_())

##